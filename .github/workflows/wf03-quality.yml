# Copyright (c) 2020-2021 Dimitrios-Georgios Akestoridis
#
# Permission is hereby granted, free of charge, to any person obtaining
# a copy of this software and associated documentation files (the
# "Software"), to deal in the Software without restriction, including
# without limitation the rights to use, copy, modify, merge, publish,
# distribute, sublicense, and/or sell copies of the Software, and to
# permit persons to whom the Software is furnished to do so, subject to
# the following conditions:
#
# The above copyright notice and this permission notice shall be
# included in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
# IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
# CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
# TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
# SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

name: wf03-quality

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  ubuntu:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10"]
    steps:
    - name: Check out mcdm
      uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Upgrade pip
      run: pip install --upgrade pip
    - name: Install Flake8
      run: pip install flake8
    - name: Check the code quality with Flake8
      run: flake8 -v --max-complexity 10 mcdm/ setup.py
    - name: Install Bandit
      run: pip install bandit
    - name: Check for common security issues with Bandit
      run: bandit -v -c .banditrc -r mcdm/ setup.py
    - name: Install Pylint
      run: pip install pylint
    - name: Install the requirements of mcdm
      run: pip install -r requirements.txt
    - name: Check the code quality with Pylint
      run: pylint --verbose --rcfile=.pylintrc mcdm/ setup.py
  macos:
    runs-on: macos-latest
    strategy:
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10"]
    steps:
    - name: Check out mcdm
      uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Upgrade pip
      run: pip install --upgrade pip
    - name: Install Flake8
      run: pip install flake8
    - name: Check the code quality with Flake8
      run: flake8 -v --max-complexity 10 mcdm/ setup.py
    - name: Install Bandit
      run: pip install bandit
    - name: Check for common security issues with Bandit
      run: bandit -v -c .banditrc -r mcdm/ setup.py
    - name: Install Pylint
      run: pip install pylint
    - name: Install the requirements of mcdm
      run: pip install -r requirements.txt
    - name: Check the code quality with Pylint
      run: pylint --verbose --rcfile=.pylintrc mcdm/ setup.py
  windows:
    runs-on: windows-latest
    strategy:
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10"]
    steps:
    - name: Check out mcdm
      uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Upgrade pip
      run: python -m pip install --upgrade pip
    - name: Install Flake8
      run: python -m pip install flake8
    - name: Check the code quality with Flake8
      run: flake8 -v --max-complexity 10 mcdm\ setup.py
    - name: Install Bandit
      run: python -m pip install bandit
    - name: Check for common security issues with Bandit
      run: bandit -v -c .banditrc -r mcdm\ setup.py
    - name: Install Pylint
      run: python -m pip install pylint
    - name: Install the requirements of mcdm
      run: python -m pip install -r requirements.txt
    - name: Check the code quality with Pylint
      run: pylint --verbose --rcfile=.pylintrc --disable=unexpected-line-ending-format mcdm\ setup.py
